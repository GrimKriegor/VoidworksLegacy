#include <voidworks/character.h>

const void* UnlockBonfiresHookReturn = (const void*)UNLOCK_BONFIRES_HOOK_RETURN;

__asm__(
  ".global UnlockBonfiresHook\n\t"
  "UnlockBonfiresHook:\n\t"
  "mov  $14000000, %edx\n\t"
  "add  $0x00, %rsp\n\t"
  "jmp  *UnlockBonfiresHookReturn(%rip)"
);

const uint8_t UNLOCKED_GESTURE_DATA[UNLOCKED_GESTURE_DATA_SIZE] = {
  0x00, 0x00, 0x00, 0x00, //Point Forward
  0x00, 0x00, 0x00, 0x00, //Point Up
  0x00, 0x00, 0x00, 0x00, //Point down
  0x00, 0x00, 0x00, 0x00, //Wave
  0x00, 0x00, 0x00, 0x00, //Beckon
  0x00, 0x00, 0x00, 0x00, //Call over
  0x00, 0x00, 0x00, 0x00, //Welcome
  0x00, 0x00, 0x00, 0x00, //Applause
  0x00, 0x00, 0x00, 0x00, //Quiet Resolve
  0x00, 0x00, 0x00, 0x00, //Jump For Joy
  0x00, 0x00, 0x00, 0x00, //Joy
  0x00, 0x00, 0x00, 0x00, //Rejoice
  0x00, 0x00, 0x00, 0x00, //Hurrah
  0x00, 0x00, 0x00, 0x00, //Praise the Sun
  0x00, 0x00, 0x00, 0x00, //My Thanks
  0x00, 0x00, 0x00, 0x00, //Bow
  0x00, 0x00, 0x00, 0x00, //Proper Bow
  0x00, 0x00, 0x00, 0x00, //Dignified Bow
  0x00, 0x00, 0x00, 0x00, //Duel Bow
  0x00, 0x00, 0x00, 0x00, //Legion Etiquette
  0x00, 0x00, 0x00, 0x00, //Darkmoon Loyality
  0x00, 0x00, 0x00, 0x00, //By my sword
  0x00, 0x00, 0x00, 0x00, //Prayer
  0x00, 0x00, 0x00, 0x00, //Silent Ally
  0x00, 0x00, 0x00, 0x00, //Rest
  0x00, 0x00, 0x00, 0x00, //Collapse
  0x00, 0x00, 0x00, 0x00, //Patches Squat
  0x00, 0x00, 0x00, 0x00, //Prostration
  0x00, 0x00, 0x00, 0x00, //Toast
  0x00, 0x00, 0x00, 0x00, //Sleep
  0x00, 0x00, 0x00, 0x00, //Curl Up
  0x00, 0x00, 0x00, 0x00, //Stretch out
  0x00, 0x00, 0x00, 0x00, //Path of the Dragon
};

void UnlockAllGestures()
{
  ProcessInterface* ds3 = ProcessInterface::GetInstance();
  ds3->WriteByteArray(
    ds3->GetDynamicAddress({BASE_A, 0x00, 0x0000, 0x00}),
    UNLOCKED_GESTURE_DATA,
    UNLOCKED_GESTURE_DATA_SIZE
  );
#if (DEBUG >= LOG_WARNING)
  printf("All gestures unlocked\n");
#endif
}

void UnlockAllBonfires()
{
  auto bonfire = new BonfireWarpParam();
  bonfire->PatchAll4Byte(0x00, 14000000);
#if (DEBUG >= LOG_WARNING)
  printf("All bonfires temporarily unlocked\n");
#endif
}

enum class SheathState : uint8_t
{
  Barehand  = 0,
  Onehanded = 1,
  Left      = 2,
  Right     = 3,
};

void SetSheathState(SheathState state)
{
  ProcessInterface* ds3 = ProcessInterface::GetInstance();
  ds3->WriteByte(
    ds3->GetDynamicAddress({BASE_A, 0x00, 0x0000}),
    (uint8_t)state
  );
}
